[buildout]
extends = http://dist.plone.org/versions/zope-2-13-24-versions.cfg
          versions.cfg

extensions = mr.developer

always-checkout = force

auto-checkout = 
               il.sapl
               collective.recipe.filestorage

parts =
         trml2pdf
         zope2
         filestorage
         zeo
         productdistros
         instance
         import
         extensions
         encoding
         sapl
         zopepy
         omelette

package-name = il.sapl

eggs = ${buildout:package-name}

zcml = ${buildout:package-name}

develop =

versions = versions

unzip = true

[sources]
il.sapl = svn https://github.com/openlegis-br/sagl/trunk/branches/3.1_buildout/
collective.recipe.filestorage = svn https://github.com/pretaweb/collective.recipe.filestorage/trunk/

[trml2pdf]
recipe = zc.recipe.egg
find-links = http://www.openlegis.com.br/downloads/trml2pdf-1.2.tar.gz
eggs = trml2pdf

[zope2]
recipe = zc.recipe.egg
eggs = Zope2
interpreter = zopepy

[zeo]
recipe = plone.recipe.zeoserver[zrs]
effective-user = zope
replicate-to = 7000
zeo-address = 127.0.0.1:8300
zeo-var = ${buildout:directory}/var
blob-storage = ${zeo:zeo-var}/blobstorage
zeo-blob-storage = ${zeo:zeo-var}/blobstorage
zeo-shared-blob-dir = on
zeo-conf-additional =
eggs =
    Zope2
    ZopeUndo
    zc.zrs
    z3c.rml
    z3c.blobfile
    zope.file

[filestorage]
recipe = collective.recipe.filestorage
location = ${zeo:zeo-var}/filestorage/%(fs_part_name)s
replicate-to = 7001
zodb-mountpoint = /sapl/sapl_documentos
blob-storage = ${zeo:zeo-var}/blobstorage
zeo-blob-storage = ${zeo:zeo-var}/blobstorage
zeo-shared-blob-dir = on
parts =
    sapl_documentos

[productdistros]
recipe = plone.recipe.distros
urls = 
nested-packages =
version-suffix-packages =

[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
zeo-client = on
zeo-address =  ${zeo:zeo-address}
shared-blob = on
user = admin:admin
effective-user = zope
verbose-security = off
debug-mode = off
event-log-level = info
environment-vars =
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    TEMP ${buildout:directory}/var/tmp
    TMP ${buildout:directory}/var/tmp

zope-conf-additional =
 extensions ${buildout:directory}/parts/instance/Extensions

eggs =
    ${buildout:eggs}
    zope.app.container
    Products.LDAPUserFolder
    Products.LDAPMultiPlugins
    requests
    Werkzeug 
    wheel 
    six 
    simplejson 
    mechanize 
    pyopenssl 
    ndg-httpsclient 
    pyasn1
    pypdf2

zcml = 
    ${buildout:package-name}

products =
    ${buildout:directory}/parts/productdistros

[sapl]
recipe = interlegis.recipe.sapl
sapl-id = sapl
admin-user = admin
mysql-user = root
mysql-pass = interlegis
mysql-db = interlegis
mysql-host = localhost
container-path = /sapl/sapl_documentos
add-mountpoint = on

[import]
recipe = plone.recipe.command
update-command = ${import:command}
command = cp ${buildout:directory}/src/il.sapl/import/*.zexp ${buildout:directory}/var/instance/import/

[extensions]
recipe = plone.recipe.command
update-command = ${extensions:command}
command = cp -r ${buildout:directory}/src/il.sapl/il/sapl/Extensions ${buildout:directory}/parts/instance/

[encoding]
recipe = collective.recipe.template
output = ${buildout:directory}/lib/python2.7/sitecustomize.py
mode = 600
input = inline:
    import sys
    sys.setdefaultencoding('utf-8')

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy zodbconvert

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
